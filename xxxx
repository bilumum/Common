<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>      
    <link href="bootstra.custom.css" rel="stylesheet" />
    <link href="../../Content/css/bootstrap.css" rel="stylesheet" />
    <link href="../../Content/css/font-awesome.min.css" rel="stylesheet" />    
    <link href="container.css" rel="stylesheet" />    
    <link href="site.main.css" rel="stylesheet" />            
   
    <script src="../../Content/js/jquery-2.1.1.min.js"></script>       
    <script src="../../Content/js/bootstrap.js"></script>  
    
    <style>

        .smart-rating-wrapper {        
    width: 100%;   
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

    .smart-rating-wrapper .panel-group {
        margin-bottom: 0px;
    }

    .smart-rating-wrapper .panel-group .panel .panel-heading a {
        padding: 0px 20px;
    }
     

    .smart-rating-wrapper .panel-group .panel .panel-heading .summary .fa {
        margin: 0 0px;
        color: #333;
    }

    .smart-rating-wrapper .panel-group .panel .panel-heading .title {
        white-space: nowrap;
        flex-basis: auto;
        display: flex;
        align-items: center;
    }

    .smart-rating-wrapper .panel-group .panel .panel-heading .title-status {
        background-color: aliceblue;        
        width: 75px;
        font-size: 20px;        
        height: 50px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgba(64, 153, 152, 1);
        color: white;
        font-weight: bold;
        margin-right: -20px;
    }


.smart-rate-table {    
    text-align: center;
}

.smart-rate-table  > thead > tr > th {
    font-weight: normal;
}

    .smart-rate-table > tbody > tr[data-is-parent="true"] {        
    }

        .smart-rate-table > tbody > tr[data-is-parent="true"] > td {
            text-align: center;
            color: white;            
            border-left: none;
            border-right: none;            
        }

            .smart-rate-table > tbody > tr[data-is-parent="true"] > td::after {
                width: 0;
                height: 0;
                border-style: solid;
                border-width: 32px 0 0 32px;
                border-color: transparent transparent transparent #da424c;
                line-height: 0px;
                _border-color: #000000 #000000 #000000 #da424c;
            }

            /*.smart-rate-table > tbody > tr[data-is-parent="true"] > td[data-value="1"] {
                opacity: 0.3;
            }

            .smart-rate-table > tbody > tr[data-is-parent="true"] > td[data-value="2"] {
                opacity: 0.3;
            }

            .smart-rate-table > tbody > tr[data-is-parent="true"] > td[data-value="3"] {
                opacity: 0.3;
            }

            .smart-rate-table > tbody > tr[data-is-parent="true"] > td[data-value="4"] {
                opacity: 0.6;
            }

            .smart-rate-table > tbody > tr[data-is-parent="true"] > td[data-value="5"] {
                opacity: 0.6;
            }

            .smart-rate-table > tbody > tr[data-is-parent="true"] > td[data-value="6"] {
                opacity: 0.6;
            }

            .smart-rate-table > tbody > tr[data-is-parent="true"] > td[data-value="7"] {
                opacity: 0.9;
            }

            .smart-rate-table > tbody > tr[data-is-parent="true"] > td[data-value="8"] {
                opacity: 0.9;
            }

            .smart-rate-table > tbody > tr[data-is-parent="true"] > td[data-value="9"] {
                opacity: 0.9;
            }*/

    .smart-rate-table > thead > tr > th {
        text-align: center;
        font-size: 12px;
    }

    .smart-rate-table > tbody > tr > th {
        font-size: 12px;
        font-weight: normal;
        color: #409998;
    }

    .smart-rate-table > tbody > tr > td {
        color: gray;
        cursor: pointer;
        transition: background-color 0.5s ease;
        color: white;        
    }

     .smart-rate-table > tbody > tr > td.no-transition {       
        transition: none;     
    }

    .smart-rate-table > tbody > .rate-main-tr td:hover {
        -webkit-transform: translateZ(0);
        transform: translateZ(0);
        box-shadow: 0 0 1px rgba(0, 0, 0, 0);
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        -moz-osx-font-smoothing: grayscale;
        -webkit-transition-duration: 0.2s;
        transition-duration: 0.2s;
        -webkit-transition-property: box-shadow;
        transition-property: box-shadow;
    }

    .smart-rate-table > tbody > .rate-main-tr td:hover {
        box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);
        background-color: rgba(64, 153, 152, 0.6);
        color: white;
    }

    .smart-rate-table > tbody > tr > .nested-rate-row {
        padding: 0px;
    }

    .smart-rate-table > tbody > tr > td.selected-main-calculated {
        background-color: rgba(249, 208, 69, 0.2);
        color: gray;
    }

    .smart-rate-table > tbody > tr > td.selected-main {
        background-color: rgba(64, 153, 152, 1);
        color: white;
    }

        /*.smart-rate-table > tbody > tr > td.selected-main[data-value="1"], .smart-rate-table > tbody > tr > td.selected-main[data-value="2"], .smart-rate-table > tbody > tr > td.selected-main[data-value="3"] {
            opacity: 0.3;
        }

        .smart-rate-table > tbody > tr > td.selected-main[data-value="4"], .smart-rate-table > tbody > tr > td.selected-main[data-value="5"], .smart-rate-table > tbody > tr > td.selected-main[data-value="6"] {
            opacity: 0.6;
        }

        .smart-rate-table > tbody > tr > td.selected-main[data-value="7"], .smart-rate-table > tbody > tr > td.selected-main[data-value="8"], .smart-rate-table > tbody > tr > td.selected-main[data-value="9"] {
            opacity: 0.9;
        }*/

    .smart-rate-table > tbody > tr > td.selected-sub {
        background-color: rgba(249, 208, 69, 0.4);
    }

    .smart-rate-table .subitem-title {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        line-height: 16px;
        max-height: 32px;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        text-align: left;
        color: #2d3334;
        /*margin-left: 23px;*/
    }

    .smart-rate-table .item-title {
        font-size: 14px;
        font-weight: bold;
    }

    .smart-rate-table .nested-opener {
        cursor: pointer;     
    }

     .smart-rate-table .nested-opener:hover .nested-opener-icon {
        opacity: 1;
    }

    .smart-rate-table .nested-opener-icon {
        float: right;
        margin-top: 10px;
        font-size: 10px;
        float: right;
        margin-top: 6px;
        font-size: 14px;
        opacity: 0.5;
    }


    

.smart-rate-table-container {
    padding: 20px;    
}


.nested-rate-row .table {
    border: none;
    margin-bottom: 0px;
}


.nested-rate-row table tr th {
    border-left: none !important;
    width: 28.9%;
}

.nested-rate-row table tr td {
    width: 8%;
}

.nested-rate-row table tr:first-child th {
    border-top: none !important;
}

.nested-rate-row table tr:first-child td {
    border-top: none !important;
}

.smart-rate-table .nested-rate-tr {
    height: 2px;
}


.smart-rate-table .main-item-value {
 position: absolute;
    color: #C6CACC;
    font-weight: bold;
    width: 25px;
    height: 25px;
    background-color: #E8E8E8;
    /* background-color: rgba(64, 153, 152, 1); */
    border-radius: 12.5px;
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: -3px;
    margin-left: 6px;
    /*-webkit-transition-duration: 0.3s;
    transition-duration: 0.3s;
    -webkit-transition-property: box-shadow, transform;
    transition-property: box-shadow, transform;*/
}

.smart-rate-table .main-item-value-star {
    border-radius: 0px;
    /*color:#F9D045;*/
    color: #878988;
    background-color: transparent;
    font-size: 21px;
}

.smart-rate-table .main-item-value-star-selected {
    border-radius: 0px;
    color: #F9D045;
    background-color: transparent;
    font-size: 21px;
}

.smart-rate-table .selected-main-group span {
    /*-webkit-transform: scale(1.7);
    transform: scale(1.7);*/
    background-color: rgba(64, 153, 152, 1);
    color: white;
}


.smart-rate-table-nested > tbody > .nested-rate-selectable {
    height: 37px;
}

    .smart-rate-table-nested > tbody > .nested-rate-selectable th {
        text-align: center;
    }

.smart-rate-table-nested > tbody > tr > td {
    vertical-align: middle;
}

    .smart-rate-table-nested > tbody > tr > td:hover {
        box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);
        background-color: rgba(249, 208, 69, 0.4);
        color: white;
    }

    .smart-rate-table-nested > tbody > tr > td:hover {
        -webkit-transform: translateZ(0);
        transform: translateZ(0);
        box-shadow: 0 0 1px rgba(0, 0, 0, 0);
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        -moz-osx-font-smoothing: grayscale;
        -webkit-transition-duration: 0.2s;
        transition-duration: 0.2s;
        -webkit-transition-property: box-shadow;
        transition-property: box-shadow;
        content: '1';
    }

    .smart-rate-table-nested > tbody > tr > td > span {
        color: gray !important;
        font-weight: normal;
        display: none;
    }



.smart-rate-table .table-no-border > tbody > tr > th,
.smart-rate-table .table-no-border > tbody > tr > td,
.smart-rate-table .table-no-border > tbody {    
    border-bottom: none !important;    
    border-right: none !important;    
}

    .smart-rate-table .table-no-border > tbody > tr:last-child > th,
    .smart-rate-table .table-no-border > tbody > tr:last-child > td {        
        border-right: none !important;
        border-bottom: 1px solid rgba(64, 153, 152, 0.7) !important;        
    }


    </style>
 
</head>
<body>

    

    <script>
        $(function () {          
        });

        ; (function ($) {
            "use strict";

            if (!$.hys) {
                $.hys = {};
            };

            if (!$.fn.hys) {
                $.fn.hys = {};
            };

            $.hys.rateBox = function (el, options) {
                var base = this;

                base.$el = $(el);
                base.el = el;
                base.$el.data("rateBox", base);

                //public

                base.init = function () {
                    base.options = $.extend({}, $.hys.rateBox.defaultOptions, options);

                    getAssessmentItemsAndCreateMatrix();
                };

                base.getRateData = function () {
                    return prepareDataForSave();
                };

                //private

                var getAssessmentItemsAndCreateMatrix = function () {
                    var userId = base.options.userId;
                    makeAjaxRequestToWebServices
                    (
                        $.hys.urls.serviceRepository.competency.getAllAssessmentItem + userId
                        , {}
                        , OnAssessmentItemsReceived
                        , OnAssessmentItemsReceiveError
                    );

                    function OnAssessmentItemsReceived(data) {
                        base.options.rateBoxData = data;
                        createRateBox();
                        fireRatedItemCountChanged();

                        if (base.options.onRateBoxLoaded) {
                            base.options.onRateBoxLoaded();
                            $('[data-toggle="tooltip"]').tooltip();
                        }
                    }

                    function OnAssessmentItemsReceiveError(a, b, c, d) {
                        console.log(a);
                        console.log(b);
                        console.log(c);
                        console.log(d);
                    }

                }

                var makeAjaxRequestToWebServices = function (URL, Data, OnSuccess, OnError, OnComplete) {
                    $.ajax({
                        type: "GET",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        cache: false,
                        url: URL,
                        data: Data,
                        success: function (result) {
                            if (OnSuccess)
                                OnSuccess(result);
                        },
                        error: function (a, b, c, d) {
                            if (OnError)
                                OnError(a, b, c, d);
                        },
                        complete: function () {
                            if (OnComplete)
                                OnComplete();
                        }
                    });
                }

                var prepareDataForSave = function () {
                    $.each(base.options.rateBoxData.GetAllAssessmentItemsResult, function (i, competencyAssessmentItem) {
                        competencyAssessmentItem.NoteValue = base.$el.find('.smart-rate-table tr[data-is-parent="true"][data-group-id="' + competencyAssessmentItem.ID + '"] td.selected-main-group')
                                                                .attr('data-value');
                        $.each(competencyAssessmentItem.CompetencyAssessmentItem, function (j, subItem) {
                            subItem.NoteValue = base.$el.find('.smart-rate-table tr[data-id="' + subItem.ID + '"][data-group-id="' + subItem.GroupID + '"]')
                                                                .attr('data-selected-value');
                            $.each(subItem.CompetencyAssessmentChildItem, function (k, nestedItem) {
                                nestedItem.NoteValue = base.$el.find('.smart-rate-table-nested[data-parent-id="' + nestedItem.ParentItemID + '"] tr[data-id="' + nestedItem.ID + '"]')
                                                                .attr('data-selected-value');
                            });

                        });
                    });

                    return options.rateBoxData;
                }

                var createRateBox = function () {
                    var panel = addWrapperElements();
                    var rateBoxTableContiner = addPanelItems(panel);

                    createRateMatrix(base.options.rateBoxData, rateBoxTableContiner)

                    attachEvents();
                }

                var getRateBoxData = function () {
                    //TODO: Get Data From Server
                    base.options.rateBoxData = rateData;
                    return rateData;
                }

                var addWrapperElements = function () {
                    var wrapper = $('<div></div>').addClass('smart-rating-wrapper');
                    var innerContainer = $('<div></div>').addClass('').appendTo(wrapper);
                    var panelGroup = $('<div></div>').addClass('panel-group').appendTo(innerContainer);
                    var panel = $('<div></div>').addClass('').appendTo(panelGroup);

                    base.$el.html(wrapper);

                    return panel;
                }

                var addPanelItems = function (panel) {
                    //TODO: Text and data must be dynamic
                    //var panelHeading = $('<div></div>').addClass('panel-heading');
                    //var panelTitle = $('<span></span>').addClass('title').html("<b>Ümit</b>'in yetkinliğini aşağıdaki 7 kritere göre değerlendirin");
                    //var panelStatus = $('<span></span>').addClass('title-status').html("0 / 7");
                    //var panelItem = $('<a></a>').append(panelTitle)
                    //.append(panelStatus)
                    //.appendTo(panelHeading);

                    var rateBoxContainer = $('<div></div>').addClass('smart-rate-table-container');

                    //panel.append(panelHeading);
                    panel.append(rateBoxContainer);

                    return rateBoxContainer;
                }

                var createRateMatrix = function (rateBoxData, container) {
                    var table = $('<table></table>').addClass('table table-bordered smart-rate-table').appendTo(container);

                    //add table heading

                    table.append('  <thead>' +
                                       '<tr>' +
                                           '<th style="width: 29%;"></th>' +
                                           '<th colspan="3" style="width: 24%;">Gelişime İhtiyacı Var</th>' +
                                           '<th colspan="3" style="width: 24%;">Tatmin Edici Seviyede</th>' +
                                           '<th colspan="3" style="width: 24%;">Üstün/Başkalarına Örnek </th>' +
                                       '</tr>' +
                                   '</thead>');

                    //add table body

                    var tableBody = $('<tbody></tbody>').appendTo(table);

                    $.each(rateBoxData.GetAllAssessmentItemsResult, function (i, competencyAssessmentItem) {

                        var initialGroup = getEqualGroupItemFromInitialData(competencyAssessmentItem.ID);


                        var tr = $('<tr></tr>').attr('data-is-parent', true)
                                               .attr('data-group-id', competencyAssessmentItem.ID);

                        tr.append('<th scope="row"><span class="item-title">' + competencyAssessmentItem.Name + '</span></th>');

                        for (var i = 1; i <= 9; i++) {
                            if (options.showStar) {
                                tr.append('<td style="opacity:0.5;" data-value="' + i + '"><span class="fa fa-star main-item-value main-item-value-star"></span></td>');
                            }
                            else {
                                tr.append('<td data-value="' + i + '"><span class="main-item-value">' + i + '</span></td>');
                            }
                        }

                        tableBody.append(tr);
                        tableBody.append('<tr class="nested-rate-tr"></tr>');

                        $.each(competencyAssessmentItem.CompetencyAssessmentItem, function (j, subItem) {

                            var initialSubItem = getEqualSubItemFromInitialData(subItem.ID, initialGroup);


                            base.options.totalItemCount++;

                            var selectedValue = subItem.NoteValue;

                            if (initialSubItem != null && initialSubItem.NoteValue > 0) {
                                selectedValue = initialSubItem.NoteValue;
                            }

                            var subTr = $('<tr></tr>').addClass('rate-main-tr')
                                                   .attr('data-id', subItem.ID)
                                                   .attr('data-group-id', subItem.GroupID)
                                                   .attr('data-selected-value', selectedValue);


                            subTr.append(' <th scope="row" class="accordion-toggle nested-opener">' +
                                               '<span class="fa fa-info-circle nested-opener-icon" ></span>&nbsp&nbsp' +
                                               '<span >' + subItem.Name + '</span>' +
                                           '</th>');

                            for (var i = 1; i <= 9; i++) {
                                var subTd = $('<td></td>').attr('data-value', i).text(i);
                                if (i == selectedValue) {
                                    subTd.addClass('selected-main');
                                }
                                if (!base.options.animateOnHover) {
                                    subTd.addClass('no-transition');
                                }
                                subTr.append(subTd);
                            }
                            tableBody.append(subTr);

                            var nestedTr = $('<tr></tr>').addClass('nested-rate-tr').attr('data-parent-id', subItem.ID).appendTo(tableBody);
                            if (subItem.CompetencyAssessmentChildItem && subItem.CompetencyAssessmentChildItem.length > 0) {

                                var nestedTd = $('<td></td>').addClass('nested-rate-row').attr('colspan', 10).appendTo(nestedTr);
                                var nestedContainer = $('<div></div>').addClass('accordian-body collapse').appendTo(nestedTd);
                                var nestedTable = $('<table></table>').addClass('table table-bordered table-no-border smart-rate-table smart-rate-table-nested')
                                                                      .attr('data-parent-id', subItem.ID)
                                                                      .appendTo(nestedContainer);

                                var nestedBody = $('<tbody></tbody>').appendTo(nestedTable);

                                $.each(subItem.CompetencyAssessmentChildItem, function (k, nestedItem) {

                                    //nestedBody.append(' <tr data-parent-id="' + nestedItem.ParentItemID + '">' +
                                    //                          //'<th colspan="10" scope="row">' +
                                    //                          //     '<span class="subitem-title"></span>' +
                                    //                          //'</th>' +
                                    //                      '</tr>');

                                    var selectedValue = subItem.NoteValue;
                                    var initialNestedSubItem = getEqualNestedSubItemFromInitialData(nestedItem.ID, initialSubItem);

                                    if (initialNestedSubItem != null && initialNestedSubItem.NoteValue > 0) {
                                        selectedValue = initialNestedSubItem.NoteValue;
                                    }

                                    var nestedSubItem = $('<tr></tr>').addClass('nested-rate-selectable')
                                        .attr('data-id', nestedItem.ID)
                                        .attr('data-parent-id', nestedItem.ParentItemID)
                                        .attr('data-selected-value', selectedValue);

                                    nestedSubItem.append('<th scope="row"><span class="subitem-title" data-toggle="tooltip" data-original-title="' + nestedItem.Name + '">' + nestedItem.Name + '</span></th>');
                                    for (var i = 1; i <= 9; i++) {
                                        var nestedItemTd = $('<td><span></span></td>').attr('data-value', i);
                                        if (selectedValue == i) {
                                            nestedItemTd.addClass('selected-sub');
                                        }
                                        if (!base.options.animateOnHover) {
                                            nestedItemTd.addClass('no-transition');
                                        }
                                        nestedSubItem.append(nestedItemTd);
                                    }

                                    nestedBody.append(nestedSubItem);

                                });

                            }
                            else {
                                subTr.find('span').removeClass('fa fa-info-circle nested-opener-icon');
                            }

                        });

                        calculateMainRateAndShow(competencyAssessmentItem.ID);
                    });

                    return table;
                }

                var calculateAndSelectItem = function (itemId) {
                    var totalRate = 0;
                    var ratedItemCount = 0;
                    base.$el.find('.smart-rate-table tbody tr[data-parent-id=' + itemId + ']').each(function (i, row) {
                        var currentValue = parseInt($(this).attr('data-selected-value'));
                        if (!isNaN(currentValue)) {
                            totalRate += currentValue;
                            ratedItemCount++;
                        }
                    });

                    var avarageRate = Math.round(totalRate / ratedItemCount);

                    base.$el.find('.smart-rate-table tbody tr[data-id=' + itemId + '] td').each(function (i, cell) {
                        $(cell).removeClass('selected-main-calculated');
                    });

                    var calculatedCell = base.$el.find('.smart-rate-table tbody tr[data-id=' + itemId + '] td[data-value=' + avarageRate + ']');
                    if (!calculatedCell.hasClass('selected-main')) {
                        calculatedCell.addClass('selected-main-calculated');
                        setTimeout(function () {
                            calculatedCell.removeClass("selected-main-calculated");
                        }, 1000);
                    }

                }

                var calculateMainRateAndShow = function (groupId) {
                    var totalRate = 0;
                    var ratedItemCount = 0;
                    base.$el.find('.smart-rate-table tbody tr[data-group-id=' + groupId + ']').each(function (i, row) {
                        var currentValue = parseInt($(this).attr('data-selected-value'));
                        if (!isNaN(currentValue)) {
                            totalRate += currentValue;
                            ratedItemCount++;
                        }
                    });

                    var avarageRate = Math.round(totalRate / ratedItemCount);
                    base.$el.find('.smart-rate-table tbody tr[data-is-parent="true"][data-group-id="' + groupId + '"] td').removeClass('selected-main-group');

                    if (options.showStar === true) {
                        base.$el.find('.smart-rate-table tbody tr[data-is-parent="true"][data-group-id="' + groupId + '"] td span').removeClass('main-item-value-star-selected');
                        for (var i = 1; i <= avarageRate; i++) {
                            base.$el.find('.smart-rate-table tbody tr[data-is-parent="true"][data-group-id="' + groupId + '"] td[data-value="' + i + '"] span').addClass('main-item-value-star-selected');
                        }
                    }

                    var calculatedRow = base.$el.find('.smart-rate-table tbody tr[data-is-parent="true"][data-group-id=' + groupId + ']');
                    var calculatedCell = calculatedRow.find('td[data-value=' + avarageRate + ']');
                    calculatedRow.attr('data-rated-item-count', ratedItemCount);
                    calculatedCell.addClass('selected-main-group');
                }

                var fireRatedItemCountChanged = function () {
                    var ratedItemCount = 0;
                    base.$el.find('.smart-rate-table tbody tr[data-is-parent="true"]').each(function () {
                        if ($(this).attr('data-rated-item-count')) {
                            ratedItemCount += parseInt($(this).attr('data-rated-item-count'));
                        }
                    });

                    if (base.options.onMainItemSelect) {
                        base.options.onMainItemSelect(ratedItemCount + ' / ' + base.options.totalItemCount);
                    }
                    //base.$el.find('.smart-rating-wrapper').find('.title-status').text(ratedItemCount + ' / 7');
                }

                var showRemainingItemCount = function () {
                    var ratedItemCount = 0;
                    //base.$el.find('.smart-rate-table tbody tr[data-is-parent="true"]').each(function () {
                    //	if ($(this).attr('data-rated-item-count')) {
                    //		ratedItemCount += parseInt($(this).attr('data-rated-item-count'));
                    //	}
                    //});
                    //base.$el.find('.smart-rating-wrapper').find('.title-status').text(ratedItemCount + ' / 7');
                }

                var attachEvents = function () {
                    base.$el.find('.smart-rate-table .nested-opener').on('click', function () {
                        var currentTr = $(this).parent('tr').next();
                        var collapse = currentTr.find('.collapse');
                        collapse.collapse('toggle');
                        //$(this).find('.nested-opener-icon').toggleClass('fa-minus-square');
                    });

                    base.$el.find('.smart-rate-table tbody tr:not(.nested-rate-tr) td').on('click', function (i, row) {

                        //prevent main header cell click
                        if ($(this).parent('tr').attr('data-is-parent')) {
                            return;
                        }

                        var alreadySelected = $(this).hasClass('selected-sub') || $(this).hasClass('selected-main');

                        //clear current selection
                        $(this).parent('tr').find('td').each(function (j, cell) {
                            $(cell).removeClass('selected-sub');
                            $(cell).removeClass('selected-main');
                            $(cell).find('span').text('');
                        });

                        $(this).parent('tr').removeAttr('data-selected-value');

                        if (!alreadySelected) {
                            $(this).parent('tr').attr('data-selected-value', $(this).attr('data-value'));
                            $(this).find('span').text($(this).attr('data-value'));
                        }

                        var selectedCss = '';
                        var parentId = $(this).parent('tr').attr('data-parent-id');
                        if (parentId) { //it is subitem    
                            var value = !alreadySelected ? $(this).attr('data-value') : '';
                            if (options.showSubItemValueOnLeft) {
                                $(this).parent('tr').find('th').text(value);
                            }
                            selectedCss = 'selected-sub';
                            calculateAndSelectItem(parentId);
                        }
                        else {
                            var groupId = $(this).parent('tr').attr('data-group-id');
                            selectedCss = 'selected-main';
                            calculateMainRateAndShow(groupId);
                            fireRatedItemCountChanged();
                        }

                        if (!alreadySelected) {
                            $(this).addClass(selectedCss);
                        }

                        generateHiddenItems();

                    });

                    base.$el.find(".smart-rate-table-nested > tbody > tr > td").hover(function () {
                        $(this).html($(this).attr('data-value') + '<span></span>');
                        $(this).css('color', 'gray');
                    }, function () {
                        $(this).html("<span></span>");
                    }
                    );
                }

                var generateHiddenItems = function () {

                    var hiddenContainer = $('.' + base.options.hiddenContainerClass);
                    if (!hiddenContainer) {
                        console.log("Hidden container not found...");
                        return;
                    }

                    hiddenContainer.empty();

                    $.each(base.options.rateBoxData.GetAllAssessmentItemsResult, function (i, competencyAssessmentItem) {

                        competencyAssessmentItem.NoteValue = base.$el.find('.smart-rate-table tr[data-is-parent="true"][data-group-id="' + competencyAssessmentItem.ID + '"] td.selected-main-group')
                                                                .attr('data-value');

                        $('<input></input>').addClass('CompetencyAssessmentNoteItem')
                                            .attr('type', 'hidden')
                                            .attr('name', 'AssessmentItems[' + i + '].NoteValue')
                                            .attr('value', competencyAssessmentItem.NoteValue)
                                                .appendTo(hiddenContainer);

                        $('<input></input>').addClass('CompetencyAssessmentNoteItem')
                                            .attr('type', 'hidden')
                                          .attr('name', 'AssessmentItems[' + i + '].Id')
                                          .attr('value', competencyAssessmentItem.ID)
                                              .appendTo(hiddenContainer);

                        $.each(competencyAssessmentItem.CompetencyAssessmentItem, function (j, subItem) {
                            subItem.NoteValue = base.$el.find('.smart-rate-table tr[data-id="' + subItem.ID + '"][data-group-id="' + subItem.GroupID + '"]')
                                                                .attr('data-selected-value');

                            $('<input></input>').addClass('CompetencyAssessmentNoteItem')
                                            .attr('type', 'hidden')
                                          .attr('name', 'AssessmentItems[' + i + '].CompetencyAssessmentItem[' + j + '].NoteValue')
                                          .attr('value', subItem.NoteValue)
                                              .appendTo(hiddenContainer);

                            $('<input></input>').addClass('CompetencyAssessmentNoteItem')
                                        .attr('type', 'hidden')
                                       .attr('name', 'AssessmentItems[' + i + '].CompetencyAssessmentItem[' + j + '].Id')
                                       .attr('value', subItem.ID)
                                           .appendTo(hiddenContainer);


                            $.each(subItem.CompetencyAssessmentChildItem, function (k, nestedItem) {
                                nestedItem.NoteValue = base.$el.find('.smart-rate-table-nested[data-parent-id="' + nestedItem.ParentItemID + '"] tr[data-id="' + nestedItem.ID + '"]')
                                                                .attr('data-selected-value');

                                $('<input></input>').addClass('CompetencyAssessmentNoteItem')
                                        .attr('type', 'hidden')
                                       .attr('name', 'AssessmentItems[' + i + '].CompetencyAssessmentItem[' + j + '].CompetencyAssessmentChildItem[' + k + '].NoteValue')
                                       .attr('value', nestedItem.NoteValue)
                                           .appendTo(hiddenContainer);


                                $('<input></input>').addClass('CompetencyAssessmentNoteItem')
                                    .attr('type', 'hidden')
                                       .attr('name', 'AssessmentItems[' + i + '].CompetencyAssessmentItem[' + j + '].CompetencyAssessmentChildItem[' + k + '].Id')
                                       .attr('value', nestedItem.ID)
                                           .appendTo(hiddenContainer);
                            });

                        });
                    });
                }

                var getEqualGroupItemFromInitialData = function (groupId) {
                    var foundedItem = null;
                    $.each(base.options.initialData, function (i, item) {
                        if (item.Id == groupId) {
                            foundedItem = item;
                            return true;
                        }
                    });

                    return foundedItem;
                }

                var getEqualSubItemFromInitialData = function (subItemId, initialGroup) {

                    if (initialGroup == null) {
                        return null;
                    }
                    var foundedItem = null;
                    $.each(initialGroup.CompetencyAssessmentItem, function (i, item) {
                        if (item.Id == subItemId) {
                            foundedItem = item;
                        }
                    });

                    return foundedItem;
                }

                var getEqualNestedSubItemFromInitialData = function (nestedItemId, initialsubItem) {

                    if (initialsubItem == null) {
                        return null;
                    }
                    var foundedItem = null;
                    $.each(initialsubItem.CompetencyAssessmentChildItem, function (i, item) {
                        if (item.Id == nestedItemId) {
                            foundedItem = item;
                        }
                    });

                    return foundedItem;
                }

                // Run initializer
                base.init();
            };

            $.hys.rateBox.defaultOptions = {
                hiddenContainerClass: 'form-group-assesment-note-select',
                initialData: [],
                showStar: false,
                showSubItemValueOnLeft: false,
                totalItemCount: 0,
                animateOnHover: true,
                onMainItemSelect: function (rateResult) {

                },
                onRateBoxLoaded: function () {

                }
            };

            $.fn.hys_rateBox = function (options) {
                return this.each(function () {
                    new $.hys.rateBox(this, options);
                });
            };

        })(jQuery);
    </script>

</body>
</html>
